plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
}

repositories {
    jcenter()
}

configurations {
    developmentOnly
}

ext {
    micronautDataVersion = '1.0.0'
}

dependencies {
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly 'io.micronaut:micronaut-inject-groovy'
    compileOnly "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-runtime-groovy'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'io.micronaut:micronaut-http-server-netty'
    implementation 'io.micronaut:micronaut-http-client'
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion"
    implementation 'javax.annotation:javax.annotation-api'

    runtimeOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    runtimeOnly 'io.micronaut.configuration:micronaut-jdbc-hikari'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation('org.spockframework:spock-core') { exclude group: 'org.codehaus.groovy' }
    testImplementation 'io.micronaut:micronaut-inject-groovy'
    testImplementation 'io.micronaut.test:micronaut-test-spock'
    testImplementation 'io.micronaut.test:micronaut-test-junit5'
}

test.classpath += configurations.developmentOnly

mainClassName = 'com.thecodesmith.Application'
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
